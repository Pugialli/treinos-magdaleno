// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String?  @map("password_hash")
  avatarUrl    String?  @map("avatar_url")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  tokens    Token[]
  alunos    Aluno[]
  Exercicio Exercicio[]

  @@map("users")
}

enum TokenType {
  PASSWORD_RECOVER
}

model Token {
  id        String    @id @default(uuid())
  type      TokenType
  createdAt DateTime  @default(now()) @map("created_at")

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @map("user_id")

  @@map("tokens")
}

model Treino {
  id      String @id @default(uuid())
  idAluno String @map("id_aluno")

  createdAt  DateTime @default(now()) @map("created_at")
  modifiedAt DateTime @updatedAt @map("modified_at")

  aluno      Aluno             @relation(fields: [idAluno], references: [id], onDelete: Cascade)
  exercicios ExercicioTreino[]

  @@map("treinos")
}

model Aluno {
  id          String   @id @default(uuid())
  slug        String   @unique
  idProfessor String   @map("id_professor")
  nome        String
  objetivo    String
  createdAt   DateTime @default(now()) @map("created_at")

  treinos   Treino[]
  professor User     @relation(fields: [idProfessor], references: [id], onDelete: Cascade)

  @@map("alunos")
}

model ExercicioTreino {
  id           String  @id @default(uuid())
  idTreino     String  @map("id_treio")
  idExercicio  String  @map("id_exercicio")
  ordem        Float
  carga        Int?
  repeticoes   Int?
  series       Int
  descansoMin  Int?    @map("descanso_min")
  descansoSeg  Int?    @map("descanso_seg")
  isometriaMin Int?    @map("isometria_min")
  isometriaSeg Int?    @map("isometria_seg")
  obs          String?

  exercicio Exercicio @relation(fields: [idExercicio], references: [id], onDelete: Cascade)
  treino    Treino    @relation(fields: [idTreino], references: [id], onDelete: Cascade)

  @@map("exercicios_treinos")
}

model Exercicio {
  id          String @id @default(uuid())
  idProfessor String @map("id_professor")
  nome        String
  categoria   String
  orientacao  String

  fotos            Foto[]
  exerciciosTreino ExercicioTreino[]

  professor User @relation(fields: [idProfessor], references: [id], onDelete: Cascade)

  @@map("exercicios")
}

model Foto {
  id          String @id @default(uuid())
  idExercicio String @map("id_exercicio")
  avatarUrl   String
  ordem       Int

  exercicio Exercicio @relation(fields: [idExercicio], references: [id], onDelete: Cascade)

  @@map("fotos")
}
